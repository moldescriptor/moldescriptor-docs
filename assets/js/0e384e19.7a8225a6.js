"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{1512:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=o(4848),n=o(8453);const i={sidebar_position:1,slug:"/"},s="Moldescriptor Documentation",c={id:"intro",title:"Moldescriptor Documentation",description:"MolDescriptors is a web-based tool for calculating molecular descriptors from SMILES. It is built on the RDKit library and provides a user-friendly interface for calculating molecular descriptors.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/moldescriptor-docs/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/moldescriptor-docs/category/getting-started"}},a={},l=[{value:"About the SMILES format",id:"about-the-smiles-format",level:2}];function d(t){const e={h1:"h1",h2:"h2",p:"p",...(0,n.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"moldescriptor-documentation",children:"Moldescriptor Documentation"}),"\n",(0,r.jsx)(e.p,{children:"MolDescriptors is a web-based tool for calculating molecular descriptors from SMILES. It is built on the RDKit library and provides a user-friendly interface for calculating molecular descriptors."}),"\n",(0,r.jsx)(e.h2,{id:"about-the-smiles-format",children:"About the SMILES format"}),"\n",(0,r.jsx)(e.p,{children:"SMILES (Simplified Molecular Input Line Entry System) is a line notation for describing the structure of chemical species using short ASCII strings. SMILES strings can be imported by most molecule editors for conversion back into two-dimensional drawings or three-dimensional models of the molecules."})]})}function u(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},8453:(t,e,o)=>{o.d(e,{R:()=>s,x:()=>c});var r=o(6540);const n={},i=r.createContext(n);function s(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);